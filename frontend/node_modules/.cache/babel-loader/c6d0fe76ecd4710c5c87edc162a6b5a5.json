{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\himan\\\\Downloads\\\\Compressed\\\\Glains-Coders-House-master\\\\GlainsCodersHouse\\\\backend\\\\frontend\\\\src\\\\components\\\\Posts\\\\AddUser.jsx\",\n    _s = $RefreshSig$();\n\nimport react, { useEffect, useState } from \"react\";\nimport { FormGroup, FormControl, InputLabel, Input, styled, Typography } from \"@mui/material\"; // import { addUser } from \"../../Service/api\";\n// import { useNavigate } from \"react-router-dom\";\n\nimport { useHistory } from \"react-router-dom\";\nimport { addUser } from \"../../Service/api\";\nimport { useSelector } from \"react-redux\";\nimport TextInput from \"../shared/TextInput/TextInput\";\nimport TextArea from \"../shared/TextArea/TextArea\";\nimport Card from \"../shared/Card/Card\";\nimport styles from \"./AddUser.module.css\";\nimport Button from \"../shared/Button/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialValue = {\n  Heading: \"\",\n  Content: \"\",\n  Category: \"\",\n  CreatorId: \"\",\n  CreatorName: \"\"\n};\n\nconst showToastMessage = () => {\n  toast.success(\"Success Notification !\", {\n    position: toast.POSITION.TOP_RIGHT\n  });\n};\n\nconst AddUser = () => {\n  _s();\n\n  const history = useHistory();\n  const [data, setData] = useState(initialValue);\n  let {\n    Heading,\n    Content,\n    Category,\n    CreatorId,\n    CreatorName\n  } = data;\n  const {\n    user\n  } = useSelector(state => state.auth);\n\n  const onValueChange = e => {\n    setData({ ...data,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const obj = {\n    Heading: Heading,\n    Content: Content,\n    Category: Category,\n    CreatorName: user.name,\n    CreatorId: user.id\n  };\n  let allFilled = true;\n\n  const addUserDetails = async () => {\n    if (Heading == \"\" || Content == \"\" || Category == \" \") {\n      allFilled = false;\n      window.alert(\"Kindly Fill all required fields\");\n    } else {\n      await addUser(obj);\n    }\n  };\n\n  const redirect = () => {\n    if (allFilled) {\n      history.push(`/allarticles`);\n    } else {\n      history.push(\"/addArticle\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      title: \"Create a fantastic article!!\",\n      icon: \"win\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"Heading\",\n        children: \"Heading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n        onChange: e => onValueChange(e),\n        name: \"Heading\",\n        value: Heading,\n        id: \"my-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"Content\",\n        children: \"Content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n        rows: \"10\",\n        col: \"0\",\n        onChange: e => onValueChange(e),\n        name: \"Content\",\n        value: Content,\n        id: \"my-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"Category\",\n        children: \"Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n        onChange: e => onValueChange(e),\n        name: \"Category\",\n        value: Category,\n        id: \"my-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"CreatorName\",\n        children: \"CreatorName\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n        name: \"CreatorName\",\n        value: user === null || user === void 0 ? void 0 : user.name,\n        id: \"my-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"CreatorId\",\n        children: \"CreatorId\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n        name: \"CreatorId\",\n        value: user === null || user === void 0 ? void 0 : user.id,\n        id: \"my-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.gap,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        imgTrue: true,\n        onClick: function (event) {\n          addUserDetails();\n          redirect();\n        },\n        children: \"Add User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AddUser, \"OkFYj55hR60ILgG9WBEz5bFXkPQ=\", false, function () {\n  return [useHistory, useSelector];\n});\n\n_c = AddUser;\nexport default AddUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"sources":["C:/Users/himan/Downloads/Compressed/Glains-Coders-House-master/GlainsCodersHouse/backend/frontend/src/components/Posts/AddUser.jsx"],"names":["react","useEffect","useState","FormGroup","FormControl","InputLabel","Input","styled","Typography","useHistory","addUser","useSelector","TextInput","TextArea","Card","styles","Button","initialValue","Heading","Content","Category","CreatorId","CreatorName","showToastMessage","toast","success","position","POSITION","TOP_RIGHT","AddUser","history","data","setData","user","state","auth","onValueChange","e","target","name","value","obj","id","allFilled","addUserDetails","window","alert","redirect","push","gap","event"],"mappings":"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","sourcesContent":["import react, { useEffect, useState } from \"react\";\r\nimport {\r\n  FormGroup,\r\n  FormControl,\r\n  InputLabel,\r\n  Input,\r\n  styled,\r\n  Typography,\r\n} from \"@mui/material\";\r\n\r\n// import { addUser } from \"../../Service/api\";\r\n// import { useNavigate } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { addUser } from \"../../Service/api\";\r\nimport { useSelector } from \"react-redux\";\r\nimport TextInput from \"../shared/TextInput/TextInput\";\r\nimport TextArea from \"../shared/TextArea/TextArea\";\r\nimport Card from \"../shared/Card/Card\";\r\nimport styles from \"./AddUser.module.css\";\r\nimport Button from \"../shared/Button/Button\";\r\nconst initialValue = {\r\n  Heading: \"\",\r\n  Content: \"\",\r\n  Category: \"\",\r\n  CreatorId: \"\",\r\n  CreatorName: \"\",\r\n};\r\n\r\nconst showToastMessage = () => {\r\n  toast.success(\"Success Notification !\", {\r\n    position: toast.POSITION.TOP_RIGHT,\r\n  });\r\n};\r\n\r\nconst AddUser = () => {\r\n  const history = useHistory();\r\n  const [data, setData] = useState(initialValue);\r\n  let { Heading, Content, Category, CreatorId, CreatorName } = data;\r\n  const { user } = useSelector((state) => state.auth);\r\n  const onValueChange = (e) => {\r\n    setData({ ...data, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const obj = {\r\n    Heading: Heading,\r\n    Content: Content,\r\n    Category: Category,\r\n    CreatorName: user.name,\r\n    CreatorId: user.id,\r\n  };\r\n  let allFilled = true;\r\n  const addUserDetails = async () => {\r\n    if (Heading == \"\" || Content == \"\" || Category == \" \") {\r\n      allFilled = false;\r\n      window.alert(\"Kindly Fill all required fields\");\r\n    } else {\r\n      await addUser(obj);\r\n    }\r\n  };\r\n  const redirect = () => {\r\n    if (allFilled) {\r\n      history.push(`/allarticles`);\r\n    } else {\r\n      history.push(\"/addArticle\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card title=\"Create a fantastic article!!\" icon=\"win\">\r\n        <label htmlFor=\"Heading\">Heading</label>\r\n        <TextInput\r\n          onChange={(e) => onValueChange(e)}\r\n          name=\"Heading\"\r\n          value={Heading}\r\n          id=\"my-input\"\r\n        />\r\n        <label htmlFor=\"Content\">Content</label>\r\n        <TextArea\r\n          rows=\"10\"\r\n          col=\"0\"\r\n          onChange={(e) => onValueChange(e)}\r\n          name=\"Content\"\r\n          value={Content}\r\n          id=\"my-input\"\r\n        />\r\n        <label htmlFor=\"Category\">Category</label>\r\n        <TextInput\r\n          onChange={(e) => onValueChange(e)}\r\n          name=\"Category\"\r\n          value={Category}\r\n          id=\"my-input\"\r\n        />\r\n        <label htmlFor=\"CreatorName\">CreatorName</label>\r\n        <TextInput name=\"CreatorName\" value={user?.name} id=\"my-input\" />\r\n        <label htmlFor=\"CreatorId\">CreatorId</label>\r\n        <TextInput name=\"CreatorId\" value={user?.id} id=\"my-input\" />\r\n      </Card>\r\n\r\n      <div className={styles.gap}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          imgTrue={true}\r\n          onClick={function (event) {\r\n            addUserDetails();\r\n            redirect();\r\n          }}\r\n        >\r\n          Add User\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddUser;\r\n"]},"metadata":{},"sourceType":"module"}