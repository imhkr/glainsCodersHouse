{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\himan\\\\Downloads\\\\Compressed\\\\Glains-Coders-House-master\\\\GlainsCodersHouse\\\\backend\\\\frontend\\\\src\\\\pages\\\\Posts\\\\PostMessages.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions/postMessage\";\nimport { Grid, Paper, withStyles, List, ListItem, ListItemText, Typography, Divider, Button } from \"@material-ui/core\";\nimport PostMessageForm from \"./PostMessageForm\";\nimport ButterToast, { Cinnamon } from \"butter-toast\";\nimport { DeleteSweep } from \"@material-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst styles = theme => ({\n  paper: {\n    margin: theme.spacing(3),\n    padding: theme.spacing(2)\n  },\n  smMargin: {\n    margin: theme.spacing(1)\n  },\n  actionDiv: {\n    textAlign: \"center\"\n  }\n});\n\nconst PostMessages = ({\n  classes,\n  ...props\n}) => {\n  _s();\n\n  //const {classes, ...props} = props\n  const [currentId, setCurrentId] = useState(0);\n  useEffect(() => {\n    props.fetchAllPostMessages();\n  }, []); //DidMount\n\n  const onDelete = id => {\n    const onSuccess = () => {\n      ButterToast.raise({\n        content: /*#__PURE__*/_jsxDEV(Cinnamon.Crisp, {\n          title: \"Post Box\",\n          content: \"Deleted successfully\",\n          scheme: Cinnamon.Crisp.SCHEME_PURPLE,\n          icon: /*#__PURE__*/_jsxDEV(DeleteSweep, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      });\n    };\n\n    if (window.confirm(\"Are you sure to delete this record?\")) props.deletePostMessage(id, onSuccess);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 5,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.paper,\n        children: /*#__PURE__*/_jsxDEV(PostMessageForm, {\n          currentId,\n          setCurrentId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 7,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.paper,\n        children: /*#__PURE__*/_jsxDEV(List, {\n          children: props.postMessageList.map((record, index) => {\n            return /*#__PURE__*/_jsxDEV(Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h5\",\n                    children: record.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: record.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: classes.actionDiv,\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"contained\",\n                      color: \"primary\",\n                      size: \"small\",\n                      className: classes.smMargin,\n                      onClick: () => setCurrentId(record._id),\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 75,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"contained\",\n                      color: \"secondary\",\n                      size: \"small\",\n                      className: classes.smMargin,\n                      onClick: () => onDelete(record._id),\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 84,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                component: \"li\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostMessages, \"qtMA8Ys3jjss/LPHNy//l+Q+ALA=\");\n\n_c = PostMessages;\n\nconst mapStateToProps = state => ({\n  postMessageList: state.postMessage.list\n});\n\nconst mapActionToProps = {\n  fetchAllPostMessages: actions.fetchAll,\n  deletePostMessage: actions.Delete\n};\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(PostMessages));\n\nvar _c;\n\n$RefreshReg$(_c, \"PostMessages\");","map":{"version":3,"sources":["C:/Users/himan/Downloads/Compressed/Glains-Coders-House-master/GlainsCodersHouse/backend/frontend/src/pages/Posts/PostMessages.js"],"names":["React","useEffect","useState","Fragment","connect","actions","Grid","Paper","withStyles","List","ListItem","ListItemText","Typography","Divider","Button","PostMessageForm","ButterToast","Cinnamon","DeleteSweep","styles","theme","paper","margin","spacing","padding","smMargin","actionDiv","textAlign","PostMessages","classes","props","currentId","setCurrentId","fetchAllPostMessages","onDelete","id","onSuccess","raise","content","Crisp","SCHEME_PURPLE","window","confirm","deletePostMessage","postMessageList","map","record","index","title","message","_id","mapStateToProps","state","postMessage","list","mapActionToProps","fetchAll","Delete"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,QAArC,QAAqD,OAArD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,wBAAzB;AACA,SACEC,IADF,EAEEC,KAFF,EAGEC,UAHF,EAIEC,IAJF,EAKEC,QALF,EAMEC,YANF,EAOEC,UAPF,EAQEC,OARF,EASEC,MATF,QAUO,mBAVP;AAWA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,WAAP,IAAsBC,QAAtB,QAAsC,cAAtC;AACA,SAASC,WAAT,QAA4B,oBAA5B;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,KAAY;AACzBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADH;AAELC,IAAAA,OAAO,EAAEJ,KAAK,CAACG,OAAN,CAAc,CAAd;AAFJ,GADkB;AAKzBE,EAAAA,QAAQ,EAAE;AACRH,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADA,GALe;AAQzBG,EAAAA,SAAS,EAAE;AACTC,IAAAA,SAAS,EAAE;AADF;AARc,CAAZ,CAAf;;AAaA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAW,KAAGC;AAAd,CAAD,KAA2B;AAAA;;AAC9C;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4B9B,QAAQ,CAAC,CAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd6B,IAAAA,KAAK,CAACG,oBAAN;AACD,GAFQ,EAEN,EAFM,CAAT,CAJ8C,CAMtC;;AAER,QAAMC,QAAQ,GAAIC,EAAD,IAAQ;AACvB,UAAMC,SAAS,GAAG,MAAM;AACtBpB,MAAAA,WAAW,CAACqB,KAAZ,CAAkB;AAChBC,QAAAA,OAAO,eACL,QAAC,QAAD,CAAU,KAAV;AACE,UAAA,KAAK,EAAC,UADR;AAEE,UAAA,OAAO,EAAC,sBAFV;AAGE,UAAA,MAAM,EAAErB,QAAQ,CAACsB,KAAT,CAAeC,aAHzB;AAIE,UAAA,IAAI,eAAE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA;AAFc,OAAlB;AAUD,KAXD;;AAYA,QAAIC,MAAM,CAACC,OAAP,CAAe,qCAAf,CAAJ,EACEZ,KAAK,CAACa,iBAAN,CAAwBR,EAAxB,EAA4BC,SAA5B;AACH,GAfD;;AAiBA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,SAAS,EAAEP,OAAO,CAACR,KAA1B;AAAA,+BACE,QAAC,eAAD;AAAuBU,UAAAA,SAAvB;AAAkCC,UAAAA;AAAlC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,SAAS,EAAEH,OAAO,CAACR,KAA1B;AAAA,+BACE,QAAC,IAAD;AAAA,oBACGS,KAAK,CAACc,eAAN,CAAsBC,GAAtB,CAA0B,CAACC,MAAD,EAASC,KAAT,KAAmB;AAC5C,gCACE,QAAC,QAAD;AAAA,sCACE,QAAC,QAAD;AAAA,uCACE,QAAC,YAAD;AAAA,0CACE,QAAC,UAAD;AAAY,oBAAA,OAAO,EAAC,IAApB;AAAA,8BAA0BD,MAAM,CAACE;AAAjC;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE;AAAA,8BAAMF,MAAM,CAACG;AAAb;AAAA;AAAA;AAAA;AAAA,0BAFF,eAGE;AAAK,oBAAA,SAAS,EAAEpB,OAAO,CAACH,SAAxB;AAAA,4CACE,QAAC,MAAD;AACE,sBAAA,OAAO,EAAC,WADV;AAEE,sBAAA,KAAK,EAAC,SAFR;AAGE,sBAAA,IAAI,EAAC,OAHP;AAIE,sBAAA,SAAS,EAAEG,OAAO,CAACJ,QAJrB;AAKE,sBAAA,OAAO,EAAE,MAAMO,YAAY,CAACc,MAAM,CAACI,GAAR,CAL7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAUE,QAAC,MAAD;AACE,sBAAA,OAAO,EAAC,WADV;AAEE,sBAAA,KAAK,EAAC,WAFR;AAGE,sBAAA,IAAI,EAAC,OAHP;AAIE,sBAAA,SAAS,EAAErB,OAAO,CAACJ,QAJrB;AAKE,sBAAA,OAAO,EAAE,MAAMS,QAAQ,CAACY,MAAM,CAACI,GAAR,CALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAVF;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF,eA2BE,QAAC,OAAD;AAAS,gBAAA,SAAS,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,sBA3BF;AAAA,eAAeH,KAAf;AAAA;AAAA;AAAA;AAAA,oBADF;AA+BD,WAhCA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgDD,CAzED;;GAAMnB,Y;;KAAAA,Y;;AA2EN,MAAMuB,eAAe,GAAIC,KAAD,KAAY;AAClCR,EAAAA,eAAe,EAAEQ,KAAK,CAACC,WAAN,CAAkBC;AADD,CAAZ,CAAxB;;AAIA,MAAMC,gBAAgB,GAAG;AACvBtB,EAAAA,oBAAoB,EAAE5B,OAAO,CAACmD,QADP;AAEvBb,EAAAA,iBAAiB,EAAEtC,OAAO,CAACoD;AAFJ,CAAzB;AAKA,eAAerD,OAAO,CACpB+C,eADoB,EAEpBI,gBAFoB,CAAP,CAGb/C,UAAU,CAACW,MAAD,CAAV,CAAmBS,YAAnB,CAHa,CAAf","sourcesContent":["import React, { useEffect, useState, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../actions/postMessage\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  withStyles,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Typography,\r\n  Divider,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport PostMessageForm from \"./PostMessageForm\";\r\nimport ButterToast, { Cinnamon } from \"butter-toast\";\r\nimport { DeleteSweep } from \"@material-ui/icons\";\r\n\r\nconst styles = (theme) => ({\r\n  paper: {\r\n    margin: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n  },\r\n  smMargin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  actionDiv: {\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\nconst PostMessages = ({ classes, ...props }) => {\r\n  //const {classes, ...props} = props\r\n  const [currentId, setCurrentId] = useState(0);\r\n\r\n  useEffect(() => {\r\n    props.fetchAllPostMessages();\r\n  }, []); //DidMount\r\n\r\n  const onDelete = (id) => {\r\n    const onSuccess = () => {\r\n      ButterToast.raise({\r\n        content: (\r\n          <Cinnamon.Crisp\r\n            title=\"Post Box\"\r\n            content=\"Deleted successfully\"\r\n            scheme={Cinnamon.Crisp.SCHEME_PURPLE}\r\n            icon={<DeleteSweep />}\r\n          />\r\n        ),\r\n      });\r\n    };\r\n    if (window.confirm(\"Are you sure to delete this record?\"))\r\n      props.deletePostMessage(id, onSuccess);\r\n  };\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={5}>\r\n        <Paper className={classes.paper}>\r\n          <PostMessageForm {...{ currentId, setCurrentId }} />\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={7}>\r\n        <Paper className={classes.paper}>\r\n          <List>\r\n            {props.postMessageList.map((record, index) => {\r\n              return (\r\n                <Fragment key={index}>\r\n                  <ListItem>\r\n                    <ListItemText>\r\n                      <Typography variant=\"h5\">{record.title}</Typography>\r\n                      <div>{record.message}</div>\r\n                      <div className={classes.actionDiv}>\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          size=\"small\"\r\n                          className={classes.smMargin}\r\n                          onClick={() => setCurrentId(record._id)}\r\n                        >\r\n                          Edit\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          color=\"secondary\"\r\n                          size=\"small\"\r\n                          className={classes.smMargin}\r\n                          onClick={() => onDelete(record._id)}\r\n                        >\r\n                          Delete\r\n                        </Button>\r\n                      </div>\r\n                    </ListItemText>\r\n                  </ListItem>\r\n                  <Divider component=\"li\" />\r\n                </Fragment>\r\n              );\r\n            })}\r\n          </List>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  postMessageList: state.postMessage.list,\r\n});\r\n\r\nconst mapActionToProps = {\r\n  fetchAllPostMessages: actions.fetchAll,\r\n  deletePostMessage: actions.Delete,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionToProps\r\n)(withStyles(styles)(PostMessages));\r\n"]},"metadata":{},"sourceType":"module"}