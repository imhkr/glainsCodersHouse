{"ast":null,"code":"import axios from \"axios\";\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n  withCredentials: true,\n  headers: {\n    \"Content-type\": \"application/json\",\n    Accept: \"application/json\"\n  }\n}); // List of all the endpoints\n\nexport const sendOtp = data => api.post(\"/api/send-otp\", data);\nexport const verifyOtp = data => api.post(\"/api/verify-otp\", data);\nexport const activate = data => api.post(\"/api/activate\", data);\nexport const logout = () => api.post(\"/api/logout\");\nexport const createRoom = data => api.post(\"/api/rooms\", data);\nexport const getAllRooms = () => api.get(\"/api/rooms\");\nexport const getRoom = roomId => api.get(`/api/rooms/${roomId}`);\nexport const addUser = user => api.post(`/api/add`, user); // Interceptors\n\napi.interceptors.response.use(config => {\n  return config;\n}, async error => {\n  const originalRequest = error.config;\n\n  if (error.response.status === 401 && originalRequest && !originalRequest._isRetry) {\n    originalRequest.isRetry = true;\n\n    try {\n      await axios.get(`${process.env.REACT_APP_API_URL}/api/refresh`, {\n        withCredentials: true\n      });\n      return api.request(originalRequest);\n    } catch (err) {\n      console.log(err.message);\n    }\n  }\n\n  throw error;\n});\nexport default api;","map":{"version":3,"sources":["C:/Users/himan/Downloads/Compressed/Glains-Coders-House-master/GlainsCodersHouse/backend/frontend/src/http/index.js"],"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","withCredentials","headers","Accept","sendOtp","data","post","verifyOtp","activate","logout","createRoom","getAllRooms","get","getRoom","roomId","addUser","user","interceptors","response","use","config","error","originalRequest","status","_isRetry","isRetry","request","err","console","log","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAa;AACvBC,EAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC,iBADE;AAEvBC,EAAAA,eAAe,EAAE,IAFM;AAGvBC,EAAAA,OAAO,EAAE;AACP,oBAAgB,kBADT;AAEPC,IAAAA,MAAM,EAAE;AAFD;AAHc,CAAb,CAAZ,C,CASA;;AACA,OAAO,MAAMC,OAAO,GAAIC,IAAD,IAAUV,GAAG,CAACW,IAAJ,CAAS,eAAT,EAA0BD,IAA1B,CAA1B;AACP,OAAO,MAAME,SAAS,GAAIF,IAAD,IAAUV,GAAG,CAACW,IAAJ,CAAS,iBAAT,EAA4BD,IAA5B,CAA5B;AACP,OAAO,MAAMG,QAAQ,GAAIH,IAAD,IAAUV,GAAG,CAACW,IAAJ,CAAS,eAAT,EAA0BD,IAA1B,CAA3B;AACP,OAAO,MAAMI,MAAM,GAAG,MAAMd,GAAG,CAACW,IAAJ,CAAS,aAAT,CAArB;AACP,OAAO,MAAMI,UAAU,GAAIL,IAAD,IAAUV,GAAG,CAACW,IAAJ,CAAS,YAAT,EAAuBD,IAAvB,CAA7B;AACP,OAAO,MAAMM,WAAW,GAAG,MAAMhB,GAAG,CAACiB,GAAJ,CAAQ,YAAR,CAA1B;AACP,OAAO,MAAMC,OAAO,GAAIC,MAAD,IAAYnB,GAAG,CAACiB,GAAJ,CAAS,cAAaE,MAAO,EAA7B,CAA5B;AACP,OAAO,MAAMC,OAAO,GAAIC,IAAD,IAAUrB,GAAG,CAACW,IAAJ,CAAU,UAAV,EAAqBU,IAArB,CAA1B,C,CAEP;;AACArB,GAAG,CAACsB,YAAJ,CAAiBC,QAAjB,CAA0BC,GAA1B,CACGC,MAAD,IAAY;AACV,SAAOA,MAAP;AACD,CAHH,EAIE,MAAOC,KAAP,IAAiB;AACf,QAAMC,eAAe,GAAGD,KAAK,CAACD,MAA9B;;AACA,MACEC,KAAK,CAACH,QAAN,CAAeK,MAAf,KAA0B,GAA1B,IACAD,eADA,IAEA,CAACA,eAAe,CAACE,QAHnB,EAIE;AACAF,IAAAA,eAAe,CAACG,OAAhB,GAA0B,IAA1B;;AACA,QAAI;AACF,YAAM/B,KAAK,CAACkB,GAAN,CAAW,GAAEd,OAAO,CAACC,GAAR,CAAYC,iBAAkB,cAA3C,EAA0D;AAC9DC,QAAAA,eAAe,EAAE;AAD6C,OAA1D,CAAN;AAIA,aAAON,GAAG,CAAC+B,OAAJ,CAAYJ,eAAZ,CAAP;AACD,KAND,CAME,OAAOK,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;AACD;AACF;;AACD,QAAMT,KAAN;AACD,CAvBH;AA0BA,eAAe1B,GAAf","sourcesContent":["import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n  withCredentials: true,\n  headers: {\n    \"Content-type\": \"application/json\",\n    Accept: \"application/json\",\n  },\n});\n\n// List of all the endpoints\nexport const sendOtp = (data) => api.post(\"/api/send-otp\", data);\nexport const verifyOtp = (data) => api.post(\"/api/verify-otp\", data);\nexport const activate = (data) => api.post(\"/api/activate\", data);\nexport const logout = () => api.post(\"/api/logout\");\nexport const createRoom = (data) => api.post(\"/api/rooms\", data);\nexport const getAllRooms = () => api.get(\"/api/rooms\");\nexport const getRoom = (roomId) => api.get(`/api/rooms/${roomId}`);\nexport const addUser = (user) => api.post(`/api/add`, user);\n\n// Interceptors\napi.interceptors.response.use(\n  (config) => {\n    return config;\n  },\n  async (error) => {\n    const originalRequest = error.config;\n    if (\n      error.response.status === 401 &&\n      originalRequest &&\n      !originalRequest._isRetry\n    ) {\n      originalRequest.isRetry = true;\n      try {\n        await axios.get(`${process.env.REACT_APP_API_URL}/api/refresh`, {\n          withCredentials: true,\n        });\n\n        return api.request(originalRequest);\n      } catch (err) {\n        console.log(err.message);\n      }\n    }\n    throw error;\n  }\n);\n\nexport default api;\n"]},"metadata":{},"sourceType":"module"}