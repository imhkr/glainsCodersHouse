{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\himan\\\\Downloads\\\\Compressed\\\\Glains-Coders-House-master\\\\GlainsCodersHouse\\\\backend\\\\frontend\\\\src\\\\components\\\\CPCalendar\\\\CPCalendar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Table from \"../Table/Table\";\nimport Loader from \"../../components/shared/Loader/Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CPCalendar = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const fetchContest = async () => {\n    try {\n      const res = await fetch(`https://clist.by/api/v2/contest/?username=himanshu_patel&api_key=4b4f6080d7056ddf5b5559c6967edb89a6fd5bce&upcoming=true&ongoing=true&format_time=true&order_by=resource_id&limit=100`);\n      const result = await res.json();\n      setData(result.objects);\n    } catch (error) {\n      console.log({\n        message: error.message\n      });\n    }\n  };\n\n  useEffect(() => {\n    fetchContest();\n    setLoading(true);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!loading && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\\"Loading Please Wait......\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 20\n    }, this), data === null || data === void 0 ? void 0 : data.map((contest, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        Event: contest.event,\n        Start: contest.start,\n        End: contest.end,\n        Duration: contest.duration,\n        Id: contest.id,\n        Link: contest.href\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CPCalendar, \"YP7e7Smzxlgf2d3MqLcgRZjo83U=\");\n\n_c = CPCalendar;\nexport default CPCalendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"CPCalendar\");","map":{"version":3,"sources":["C:/Users/himan/Downloads/Compressed/Glains-Coders-House-master/GlainsCodersHouse/backend/frontend/src/components/CPCalendar/CPCalendar.jsx"],"names":["React","useEffect","useState","Table","Loader","CPCalendar","data","setData","loading","setLoading","fetchContest","res","fetch","result","json","objects","error","console","log","message","map","contest","i","event","start","end","duration","id","href"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,MAAP,MAAmB,uCAAnB;;;AACA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;;AACA,QAAMQ,YAAY,GAAG,YAAY;AAC/B,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMC,KAAK,CACpB,sLADoB,CAAvB;AAGA,YAAMC,MAAM,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAArB;AACAP,MAAAA,OAAO,CAACM,MAAM,CAACE,OAAR,CAAP;AACD,KAND,CAME,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY;AAAEC,QAAAA,OAAO,EAAEH,KAAK,CAACG;AAAjB,OAAZ;AACD;AACF,GAVD;;AAWAlB,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,YAAY;AACZD,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACE;AAAA,eACG,CAACD,OAAD,iBAAY;AAAA,gBAAI;AAAJ;AAAA;AAAA;AAAA;AAAA,YADf,EAEGF,IAFH,aAEGA,IAFH,uBAEGA,IAAI,CAAEc,GAAN,CAAU,CAACC,OAAD,EAAUC,CAAV,kBACT;AAAA,6BACE,QAAC,KAAD;AAEE,QAAA,KAAK,EAAED,OAAO,CAACE,KAFjB;AAGE,QAAA,KAAK,EAAEF,OAAO,CAACG,KAHjB;AAIE,QAAA,GAAG,EAAEH,OAAO,CAACI,GAJf;AAKE,QAAA,QAAQ,EAAEJ,OAAO,CAACK,QALpB;AAME,QAAA,EAAE,EAAEL,OAAO,CAACM,EANd;AAOE,QAAA,IAAI,EAAEN,OAAO,CAACO;AAPhB,SACON,CADP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CArCD;;GAAMjB,U;;KAAAA,U;AAuCN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Table from \"../Table/Table\";\r\nimport Loader from \"../../components/shared/Loader/Loader\";\r\nconst CPCalendar = () => {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const fetchContest = async () => {\r\n    try {\r\n      const res = await fetch(\r\n        `https://clist.by/api/v2/contest/?username=himanshu_patel&api_key=4b4f6080d7056ddf5b5559c6967edb89a6fd5bce&upcoming=true&ongoing=true&format_time=true&order_by=resource_id&limit=100`\r\n      );\r\n      const result = await res.json();\r\n      setData(result.objects);\r\n    } catch (error) {\r\n      console.log({ message: error.message });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchContest();\r\n    setLoading(true);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {!loading && <h1>\"Loading Please Wait......\"</h1>}\r\n      {data?.map((contest, i) => (\r\n        <div>\r\n          <Table\r\n            key={i}\r\n            Event={contest.event}\r\n            Start={contest.start}\r\n            End={contest.end}\r\n            Duration={contest.duration}\r\n            Id={contest.id}\r\n            Link={contest.href}\r\n          />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CPCalendar;\r\n"]},"metadata":{},"sourceType":"module"}