{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/himan/Downloads/Compressed/Glains-Coders-House-master/GlainsCodersHouse/backend/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"C:/Users/himan/Downloads/Compressed/Glains-Coders-House-master/GlainsCodersHouse/backend/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"C:/Users/himan/Downloads/Compressed/Glains-Coders-House-master/GlainsCodersHouse/backend/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _toConsumableArray from\"C:/Users/himan/Downloads/Compressed/Glains-Coders-House-master/GlainsCodersHouse/backend/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:/Users/himan/Downloads/Compressed/Glains-Coders-House-master/GlainsCodersHouse/backend/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState,useRef,useCallback}from'react';import{ACTIONS}from'../actions';import socketInit from'../socket';import freeice from'freeice';import{useStateWithCallback}from'./useStateWithCallback';export var useWebRTC=function useWebRTC(roomId,user){var _useStateWithCallback=useStateWithCallback([]),_useStateWithCallback2=_slicedToArray(_useStateWithCallback,2),clients=_useStateWithCallback2[0],setClients=_useStateWithCallback2[1];var audioElements=useRef({});var connections=useRef({});var socket=useRef(null);var localMediaStream=useRef(null);var clientsRef=useRef([]);var addNewClient=useCallback(function(newClient,cb){var lookingFor=clients.find(function(client){return client.id===newClient.id;});console.log('clients',clients,lookingFor);if(lookingFor===undefined){setClients(function(existingClients){return[].concat(_toConsumableArray(existingClients),[newClient]);},cb);}},[clients,setClients]);useEffect(function(){socket.current=socketInit();},[]);// Handle new peer\nuseEffect(function(){var handleNewPeer=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref){var peerId,createOffer,remoteUser,offer;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:peerId=_ref.peerId,createOffer=_ref.createOffer,remoteUser=_ref.user;if(!(peerId in connections.current)){_context.next=3;break;}return _context.abrupt(\"return\",console.warn(\"You are already connected with \".concat(peerId,\" (\").concat(user.name,\")\")));case 3:// Store it to connections\nconnections.current[peerId]=new RTCPeerConnection({iceServers:freeice()});// Handle new ice candidate on this peer connection\nconnections.current[peerId].onicecandidate=function(event){socket.current.emit(ACTIONS.RELAY_ICE,{peerId:peerId,icecandidate:event.candidate});};// Handle on track event on this connection\nconnections.current[peerId].ontrack=function(_ref3){var _ref3$streams=_slicedToArray(_ref3.streams,1),remoteStream=_ref3$streams[0];addNewClient(_objectSpread(_objectSpread({},remoteUser),{},{muted:true}),function(){// console.log('peer', audioElements.current, peerId);\nif(audioElements.current[remoteUser.id]){audioElements.current[remoteUser.id].srcObject=remoteStream;}else{var settled=false;var interval=setInterval(function(){if(audioElements.current[remoteUser.id]){audioElements.current[remoteUser.id].srcObject=remoteStream;settled=true;}if(settled){clearInterval(interval);}},1000);}});};// Add connection to peer connections track\nlocalMediaStream.current.getTracks().forEach(function(track){connections.current[peerId].addTrack(track,localMediaStream.current);});// Create an offer if required\nif(!createOffer){_context.next=14;break;}_context.next=10;return connections.current[peerId].createOffer();case 10:offer=_context.sent;_context.next=13;return connections.current[peerId].setLocalDescription(offer);case 13:// send offer to the server\nsocket.current.emit(ACTIONS.RELAY_SDP,{peerId:peerId,sessionDescription:offer});case 14:case\"end\":return _context.stop();}}},_callee);}));return function handleNewPeer(_x){return _ref2.apply(this,arguments);};}();// Listen for add peer event from ws\nsocket.current.on(ACTIONS.ADD_PEER,handleNewPeer);return function(){socket.current.off(ACTIONS.ADD_PEER);};},[clients]);useEffect(function(){var startCapture=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return navigator.mediaDevices.getUserMedia({audio:true});case 2:localMediaStream.current=_context2.sent;case 3:case\"end\":return _context2.stop();}}},_callee2);}));return function startCapture(){return _ref4.apply(this,arguments);};}();startCapture().then(function(){// add user to clients list\naddNewClient(_objectSpread(_objectSpread({},user),{},{muted:true}),function(){var localElement=audioElements.current[user.id];if(localElement){localElement.volume=0;localElement.srcObject=localMediaStream.current;}});// Emit the action to join\nsocket.current.emit(ACTIONS.JOIN,{roomId:roomId,user:user});});// Leaving the room\nreturn function(){localMediaStream.current.getTracks().forEach(function(track){return track.stop();});socket.current.emit(ACTIONS.LEAVE,{roomId:roomId});};},[]);// Handle ice candidate\nuseEffect(function(){socket.current.on(ACTIONS.ICE_CANDIDATE,function(_ref5){var peerId=_ref5.peerId,icecandidate=_ref5.icecandidate;// console.log('ices', connections.current[peerId]);\nif(icecandidate){connections.current[peerId].addIceCandidate(icecandidate);}});return function(){socket.current.off(ACTIONS.ICE_CANDIDATE);};},[]);// Handle session description\nuseEffect(function(){var setRemoteMedia=/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_ref6){var peerId,remoteSessionDescription,connection,answer;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:peerId=_ref6.peerId,remoteSessionDescription=_ref6.sessionDescription;connections.current[peerId].setRemoteDescription(new RTCSessionDescription(remoteSessionDescription));// If session descrition is offer then create an answer\nif(!(remoteSessionDescription.type==='offer')){_context3.next=9;break;}connection=connections.current[peerId];_context3.next=6;return connection.createAnswer();case 6:answer=_context3.sent;connection.setLocalDescription(answer);socket.current.emit(ACTIONS.RELAY_SDP,{peerId:peerId,sessionDescription:answer});case 9:case\"end\":return _context3.stop();}}},_callee3);}));return function setRemoteMedia(_x2){return _ref7.apply(this,arguments);};}();socket.current.on(ACTIONS.SESSION_DESCRIPTION,setRemoteMedia);return function(){socket.current.off(ACTIONS.SESSION_DESCRIPTION);};},[]);useEffect(function(){window.addEventListener('unload',function(){alert('leaving');socket.current.emit(ACTIONS.LEAVE,{roomId:roomId});});},[]);useEffect(function(){var handleRemovePeer=function handleRemovePeer(_ref8){var peerID=_ref8.peerID,userId=_ref8.userId;console.log('leaving',peerID,userId);if(connections.current[peerID]){connections.current[peerID].close();}delete connections.current[peerID];delete audioElements.current[peerID];setClients(function(list){return list.filter(function(c){return c.id!==userId;});});};socket.current.on(ACTIONS.REMOVE_PEER,handleRemovePeer);return function(){socket.current.off(ACTIONS.REMOVE_PEER);};},[]);useEffect(function(){// handle mute and unmute\nsocket.current.on(ACTIONS.MUTE,function(_ref9){var peerId=_ref9.peerId,userId=_ref9.userId;console.log('muting',userId);setMute(true,userId);});socket.current.on(ACTIONS.UNMUTE,function(_ref10){var peerId=_ref10.peerId,userId=_ref10.userId;console.log('unmuting',userId);setMute(false,userId);});var setMute=function setMute(mute,userId){var clientIdx=clientsRef.current.map(function(client){return client.id;}).indexOf(userId);console.log('idx',clientIdx);// const connectedClients = clientsRef.current.filter(\n//     (client) => client.id !== userId\n// );\nvar connectedClientsClone=JSON.parse(JSON.stringify(clientsRef.current));if(clientIdx>-1){connectedClientsClone[clientIdx].muted=mute;console.log('muuuu',connectedClientsClone);setClients(function(_){return connectedClientsClone;});}};},[]);var provideRef=function provideRef(instance,userId){audioElements.current[userId]=instance;};useEffect(function(){clientsRef.current=clients;},[clients]);var handleMute=function handleMute(isMute,userId){var settled=false;if(userId===user.id){var interval=setInterval(function(){if(localMediaStream.current){localMediaStream.current.getTracks()[0].enabled=!isMute;if(isMute){socket.current.emit(ACTIONS.MUTE,{roomId:roomId,userId:user.id});}else{socket.current.emit(ACTIONS.UNMUTE,{roomId:roomId,userId:user.id});}// console.log(\n//     'localMediaStream ',\n//     localMediaStream.current.getTracks()\n// );\nsettled=true;}if(settled){clearInterval(interval);}},200);}};return{clients:clients,provideRef:provideRef,handleMute:handleMute,localStream:localMediaStream.current};};","map":{"version":3,"sources":["C:/Users/himan/Downloads/Compressed/Glains-Coders-House-master/GlainsCodersHouse/backend/frontend/src/hooks/useWebRTC.js"],"names":["useEffect","useState","useRef","useCallback","ACTIONS","socketInit","freeice","useStateWithCallback","useWebRTC","roomId","user","clients","setClients","audioElements","connections","socket","localMediaStream","clientsRef","addNewClient","newClient","cb","lookingFor","find","client","id","console","log","undefined","existingClients","current","handleNewPeer","peerId","createOffer","remoteUser","warn","name","RTCPeerConnection","iceServers","onicecandidate","event","emit","RELAY_ICE","icecandidate","candidate","ontrack","streams","remoteStream","muted","srcObject","settled","interval","setInterval","clearInterval","getTracks","forEach","track","addTrack","offer","setLocalDescription","RELAY_SDP","sessionDescription","on","ADD_PEER","off","startCapture","navigator","mediaDevices","getUserMedia","audio","then","localElement","volume","JOIN","stop","LEAVE","ICE_CANDIDATE","addIceCandidate","setRemoteMedia","remoteSessionDescription","setRemoteDescription","RTCSessionDescription","type","connection","createAnswer","answer","SESSION_DESCRIPTION","window","addEventListener","alert","handleRemovePeer","peerID","userId","close","list","filter","c","REMOVE_PEER","MUTE","setMute","UNMUTE","mute","clientIdx","map","indexOf","connectedClientsClone","JSON","parse","stringify","_","provideRef","instance","handleMute","isMute","enabled","localStream"],"mappings":"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","sourcesContent":["import { useEffect, useState, useRef, useCallback } from 'react';\nimport { ACTIONS } from '../actions';\nimport socketInit from '../socket';\nimport freeice from 'freeice';\nimport { useStateWithCallback } from './useStateWithCallback';\n\nexport const useWebRTC = (roomId, user) => {\n    const [clients, setClients] = useStateWithCallback([]);\n    const audioElements = useRef({});\n    const connections = useRef({});\n    const socket = useRef(null);\n    const localMediaStream = useRef(null);\n    const clientsRef = useRef([]);\n\n    const addNewClient = useCallback(\n        (newClient, cb) => {\n            const lookingFor = clients.find(\n                (client) => client.id === newClient.id\n            );\n\n            console.log('clients', clients, lookingFor);\n            if (lookingFor === undefined) {\n                setClients(\n                    (existingClients) => [...existingClients, newClient],\n                    cb\n                );\n            }\n        },\n        [clients, setClients]\n    );\n\n    useEffect(() => {\n        socket.current = socketInit();\n    }, []);\n\n    // Handle new peer\n\n    useEffect(() => {\n        const handleNewPeer = async ({\n            peerId,\n            createOffer,\n            user: remoteUser,\n        }) => {\n            // If already connected then prevent connecting again\n            if (peerId in connections.current) {\n                return console.warn(\n                    `You are already connected with ${peerId} (${user.name})`\n                );\n            }\n\n            // Store it to connections\n            connections.current[peerId] = new RTCPeerConnection({\n                iceServers: freeice(),\n            });\n\n            // Handle new ice candidate on this peer connection\n            connections.current[peerId].onicecandidate = (event) => {\n                socket.current.emit(ACTIONS.RELAY_ICE, {\n                    peerId,\n                    icecandidate: event.candidate,\n                });\n            };\n\n            // Handle on track event on this connection\n            connections.current[peerId].ontrack = ({\n                streams: [remoteStream],\n            }) => {\n                addNewClient({ ...remoteUser, muted: true }, () => {\n                    // console.log('peer', audioElements.current, peerId);\n\n                    if (audioElements.current[remoteUser.id]) {\n                        audioElements.current[remoteUser.id].srcObject =\n                            remoteStream;\n                    } else {\n                        let settled = false;\n                        const interval = setInterval(() => {\n                            if (audioElements.current[remoteUser.id]) {\n                                audioElements.current[remoteUser.id].srcObject =\n                                    remoteStream;\n                                settled = true;\n                            }\n\n                            if (settled) {\n                                clearInterval(interval);\n                            }\n                        }, 1000);\n                    }\n                });\n            };\n\n            // Add connection to peer connections track\n            localMediaStream.current.getTracks().forEach((track) => {\n                connections.current[peerId].addTrack(\n                    track,\n                    localMediaStream.current\n                );\n            });\n\n            // Create an offer if required\n            if (createOffer) {\n                const offer = await connections.current[peerId].createOffer();\n\n                // Set as local description\n                await connections.current[peerId].setLocalDescription(offer);\n\n                // send offer to the server\n                socket.current.emit(ACTIONS.RELAY_SDP, {\n                    peerId,\n                    sessionDescription: offer,\n                });\n            }\n        };\n\n        // Listen for add peer event from ws\n        socket.current.on(ACTIONS.ADD_PEER, handleNewPeer);\n        return () => {\n            socket.current.off(ACTIONS.ADD_PEER);\n        };\n    }, [clients]);\n\n    useEffect(() => {\n        const startCapture = async () => {\n            // Start capturing local audio stream.\n\n            localMediaStream.current =\n                await navigator.mediaDevices.getUserMedia({\n                    audio: true,\n                });\n        };\n\n        startCapture().then(() => {\n            // add user to clients list\n            addNewClient({ ...user, muted: true }, () => {\n                const localElement = audioElements.current[user.id];\n                if (localElement) {\n                    localElement.volume = 0;\n                    localElement.srcObject = localMediaStream.current;\n                }\n            });\n\n            // Emit the action to join\n            socket.current.emit(ACTIONS.JOIN, {\n                roomId,\n                user,\n            });\n        });\n\n        // Leaving the room\n        return () => {\n            localMediaStream.current\n                .getTracks()\n                .forEach((track) => track.stop());\n            socket.current.emit(ACTIONS.LEAVE, { roomId });\n        };\n    }, []);\n\n    // Handle ice candidate\n    useEffect(() => {\n        socket.current.on(ACTIONS.ICE_CANDIDATE, ({ peerId, icecandidate }) => {\n            // console.log('ices', connections.current[peerId]);\n            if (icecandidate) {\n                connections.current[peerId].addIceCandidate(icecandidate);\n            }\n        });\n\n        return () => {\n            socket.current.off(ACTIONS.ICE_CANDIDATE);\n        };\n    }, []);\n\n    // Handle session description\n\n    useEffect(() => {\n        const setRemoteMedia = async ({\n            peerId,\n            sessionDescription: remoteSessionDescription,\n        }) => {\n            connections.current[peerId].setRemoteDescription(\n                new RTCSessionDescription(remoteSessionDescription)\n            );\n\n            // If session descrition is offer then create an answer\n            if (remoteSessionDescription.type === 'offer') {\n                const connection = connections.current[peerId];\n\n                const answer = await connection.createAnswer();\n                connection.setLocalDescription(answer);\n\n                socket.current.emit(ACTIONS.RELAY_SDP, {\n                    peerId,\n                    sessionDescription: answer,\n                });\n            }\n        };\n\n        socket.current.on(ACTIONS.SESSION_DESCRIPTION, setRemoteMedia);\n        return () => {\n            socket.current.off(ACTIONS.SESSION_DESCRIPTION);\n        };\n    }, []);\n\n    useEffect(() => {\n        window.addEventListener('unload', function () {\n            alert('leaving');\n            socket.current.emit(ACTIONS.LEAVE, { roomId });\n        });\n    }, []);\n\n    useEffect(() => {\n        const handleRemovePeer = ({ peerID, userId }) => {\n            console.log('leaving', peerID, userId);\n\n            if (connections.current[peerID]) {\n                connections.current[peerID].close();\n            }\n\n            delete connections.current[peerID];\n            delete audioElements.current[peerID];\n\n            setClients((list) => list.filter((c) => c.id !== userId));\n        };\n\n        socket.current.on(ACTIONS.REMOVE_PEER, handleRemovePeer);\n\n        return () => {\n            socket.current.off(ACTIONS.REMOVE_PEER);\n        };\n    }, []);\n\n    useEffect(() => {\n        // handle mute and unmute\n        socket.current.on(ACTIONS.MUTE, ({ peerId, userId }) => {\n            console.log('muting', userId);\n            setMute(true, userId);\n        });\n\n        socket.current.on(ACTIONS.UNMUTE, ({ peerId, userId }) => {\n            console.log('unmuting', userId);\n            setMute(false, userId);\n        });\n\n        const setMute = (mute, userId) => {\n            const clientIdx = clientsRef.current\n                .map((client) => client.id)\n                .indexOf(userId);\n\n            console.log('idx', clientIdx);\n\n            // const connectedClients = clientsRef.current.filter(\n            //     (client) => client.id !== userId\n            // );\n\n            const connectedClientsClone = JSON.parse(\n                JSON.stringify(clientsRef.current)\n            );\n\n            if (clientIdx > -1) {\n                connectedClientsClone[clientIdx].muted = mute;\n                console.log('muuuu', connectedClientsClone);\n                setClients((_) => connectedClientsClone);\n            }\n        };\n    }, []);\n\n    const provideRef = (instance, userId) => {\n        audioElements.current[userId] = instance;\n    };\n\n    useEffect(() => {\n        clientsRef.current = clients;\n    }, [clients]);\n\n    const handleMute = (isMute, userId) => {\n        let settled = false;\n\n        if (userId === user.id) {\n            let interval = setInterval(() => {\n                if (localMediaStream.current) {\n                    localMediaStream.current.getTracks()[0].enabled = !isMute;\n                    if (isMute) {\n                        socket.current.emit(ACTIONS.MUTE, {\n                            roomId,\n                            userId: user.id,\n                        });\n                    } else {\n                        socket.current.emit(ACTIONS.UNMUTE, {\n                            roomId,\n                            userId: user.id,\n                        });\n                    }\n                    // console.log(\n                    //     'localMediaStream ',\n                    //     localMediaStream.current.getTracks()\n                    // );\n                    settled = true;\n                }\n                if (settled) {\n                    clearInterval(interval);\n                }\n            }, 200);\n        }\n    };\n\n    return {\n        clients,\n        provideRef,\n        handleMute,\n        localStream: localMediaStream.current,\n    };\n};\n"]},"metadata":{},"sourceType":"module"}