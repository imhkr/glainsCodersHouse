{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\himan\\\\Downloads\\\\Compressed\\\\Glains-Coders-House-master\\\\GlainsCodersHouse\\\\backend\\\\frontend\\\\src\\\\components\\\\Posts\\\\AllUsers.jsx\",\n    _s = $RefreshSig$();\n\nimport react, { useState, useEffect } from \"react\";\nimport { Table, TableHead, TableCell, Paper, TableRow, TableBody, Button, styled } from \"@mui/material\";\nimport { getUsers, deleteUser } from \"../../Service/api\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledTable = styled(Table)`\n  width: 90%;\n  margin: 50px 0 0 50px;\n`;\n_c = StyledTable;\nconst THead = styled(TableRow)`\n  & > th {\n    font-size: 20px;\n    background: #000000;\n    color: #ffffff;\n  }\n`;\n_c2 = THead;\nconst TRow = styled(TableRow)`\n  & > td {\n    font-size: 18px;\n  }\n`;\n_c3 = TRow;\n\nconst AllUsers = () => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    getAllUsers();\n  }, []);\n\n  const deleteUserData = async id => {\n    await deleteUser(id);\n    getAllUsers();\n  };\n\n  const getAllUsers = async () => {\n    let response = await getUsers();\n    setUsers(response.data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledTable, {\n    children: [/*#__PURE__*/_jsxDEV(TableHead, {\n      children: /*#__PURE__*/_jsxDEV(THead, {\n        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n          children: \"Id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: \"Phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n      children: [console.log(users), users === null || users === void 0 ? void 0 : users.map(user => /*#__PURE__*/_jsxDEV(TRow, {\n        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n          children: user._id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(TableCell, {\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: user.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: user.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: user.phone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            variant: \"contained\",\n            style: {\n              marginRight: 10\n            },\n            component: Link,\n            to: `/edit/${user._id}`,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n            color: \"secondary\",\n            variant: \"contained\",\n            onClick: () => deleteUserData(user._id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AllUsers, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n\n_c4 = AllUsers;\nexport default AllUsers;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"StyledTable\");\n$RefreshReg$(_c2, \"THead\");\n$RefreshReg$(_c3, \"TRow\");\n$RefreshReg$(_c4, \"AllUsers\");","map":{"version":3,"sources":["C:/Users/himan/Downloads/Compressed/Glains-Coders-House-master/GlainsCodersHouse/backend/frontend/src/components/Posts/AllUsers.jsx"],"names":["react","useState","useEffect","Table","TableHead","TableCell","Paper","TableRow","TableBody","Button","styled","getUsers","deleteUser","Link","StyledTable","THead","TRow","AllUsers","users","setUsers","getAllUsers","deleteUserData","id","response","data","console","log","map","user","_id","name","username","email","phone","marginRight"],"mappings":"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","sourcesContent":["import react, { useState, useEffect } from \"react\";\r\nimport {\r\n  Table,\r\n  TableHead,\r\n  TableCell,\r\n  Paper,\r\n  TableRow,\r\n  TableBody,\r\n  Button,\r\n  styled,\r\n} from \"@mui/material\";\r\nimport { getUsers, deleteUser } from \"../../Service/api\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst StyledTable = styled(Table)`\r\n  width: 90%;\r\n  margin: 50px 0 0 50px;\r\n`;\r\n\r\nconst THead = styled(TableRow)`\r\n  & > th {\r\n    font-size: 20px;\r\n    background: #000000;\r\n    color: #ffffff;\r\n  }\r\n`;\r\n\r\nconst TRow = styled(TableRow)`\r\n  & > td {\r\n    font-size: 18px;\r\n  }\r\n`;\r\n\r\nconst AllUsers = () => {\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getAllUsers();\r\n  }, []);\r\n\r\n  const deleteUserData = async (id) => {\r\n    await deleteUser(id);\r\n    getAllUsers();\r\n  };\r\n\r\n  const getAllUsers = async () => {\r\n    let response = await getUsers();\r\n    setUsers(response.data);\r\n  };\r\n\r\n  return (\r\n    <StyledTable>\r\n      <TableHead>\r\n        <THead>\r\n          <TableCell>Id</TableCell>\r\n          <TableCell>Name</TableCell>\r\n          <TableCell>Username</TableCell>\r\n          <TableCell>Email</TableCell>\r\n          <TableCell>Phone</TableCell>\r\n          <TableCell></TableCell>\r\n        </THead>\r\n      </TableHead>\r\n      <TableBody>\r\n        {console.log(users)}\r\n        {users?.map((user) => (\r\n          <TRow key={user.id}>\r\n            <TableCell>{user._id}</TableCell>{\" \"}\r\n            {/* change it to user.id to use JSON Server */}\r\n            <TableCell>{user.name}</TableCell>\r\n            <TableCell>{user.username}</TableCell>\r\n            <TableCell>{user.email}</TableCell>\r\n            <TableCell>{user.phone}</TableCell>\r\n            <TableCell>\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                style={{ marginRight: 10 }}\r\n                component={Link}\r\n                to={`/edit/${user._id}`}\r\n              >\r\n                Edit\r\n              </Button>{\" \"}\r\n              {/* change it to user.id to use JSON Server */}\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"contained\"\r\n                onClick={() => deleteUserData(user._id)}\r\n              >\r\n                Delete\r\n              </Button>{\" \"}\r\n              {/* change it to user.id to use JSON Server */}\r\n            </TableCell>\r\n          </TRow>\r\n        ))}\r\n      </TableBody>\r\n    </StyledTable>\r\n  );\r\n};\r\n\r\nexport default AllUsers;\r\n"]},"metadata":{},"sourceType":"module"}